import { Figure } from "./figure.js";
import { FigureA } from "./figureA.js";
import { FigureB } from "./figureB.js";
import { FigureC } from "./figureC.js";

class Tetris {
    num = 0;
    started = true;
    figureGoingDown =  false;
    currentFigure = null;
    tempMatrix = [
        ['','','','','','','','','',''],
        ['','','','','','','','','',''],
        ['','','','','','','','','',''],
        ['','','','','','','','','',''],
        ['','','','','','','','','',''],
        ['','','','','','','','','',''],
        ['','','','','','','','','',''],
        ['','','','','','','','','',''],
        ['','','','','','','','','',''],
        ['','','','','','','','','',''],
        ['','','','','','','','','',''],
        ['','','','','','','','','',''],
        ['','','','','','','','','',''],
        ['','','','','','','','','',''],
        ['','','','','','','','','',''],
        ['','','','','','','','','',''],
        ['','','','','','','','','',''],
        ['','','','','','','','','',''],
        ['','','','','','','','','',''],
        ['','','','','','','','','',''],
        ['','','','','','','','','',''],
        ['','','','','','','','','',''],
        ['','','','','','','','','',''],
        ['','','','','','','','','','']
    ];
    matrix=[
        ['','','','','','','','','',''],
        ['','','','','','','','','',''],
        ['','','','','','','','','',''],
        ['','','','','','','','','',''],
        ['','','','','','','','','',''],
        ['','','','','','','','','',''],
        ['','','','','','','','','',''],
        ['','','','','','','','','',''],
        ['','','','','','','','','',''],
        ['','','','','','','','','',''],
        ['','','','','','','','','',''],
        ['','','','','','','','','',''],
        ['','','','','','','','','',''],
        ['','','','','','','','','',''],
        ['','','','','','','','','',''],
        ['','','','','','','','','',''],
        ['','','','','','','','','',''],
        ['','','','','','','','','',''],
        ['','','','','','','','','',''],
        ['','','','','','','','','',''],
        ['','','','','','','','','',''],
        ['','','','','','','','','',''],
        ['','','','','','','','','',''],
        ['','','','','','','','','','']
    ];
    constructor(){
        console.log(this.matrix)
    }

    print = () => {
        for (let i = 0; i < 10; i++) {
            for(let j = 0; j<24; j++){
              const element = document.querySelector('[rowcolumn="'+j+' '+i+'"]');
                if(this.matrix[j][i]!==''){
                    element.className = this.matrix[j][i]+' cell';
                } else {
                    element.className = 'cell'
                }
            }
        }
    }

    start = () => {
        //setInterval(() => {
            for (let i = 0; i < 10; i++) {
                for(let j = 0; j<24; j++){
                  const element = document.querySelector('[rowcolumn="'+j+' '+i+'"]');
                    if(this.matrix[j][i]!==''){
                        element.className = this.matrix[j][i]+' cell';
                    } else {
                        element.className = 'cell';
                    }
                }
            }
            //this.num++;
            //this.print();
        //}, 1000)
    }

    createFigure = () => {
        const a = Math.floor(Math.random() * 3);
        let figure = null;
        switch (a) {
            case 0:
                figure = new FigureA();
                break;
            case 1:
                figure = new FigureB();
                break;
            case 2:
                figure = new FigureC();
                break;
        }
        figure.create();
        this.currentFigure = figure;
        this.updateMatrix()
        this.figureGoingDown = true;
    }

    avanceFigure = () => {
        this.currentFigure.avance();
        this.updateMatrix();
    }

    updateMatrix = () => {
        const emptyMatrix =  [
            ['','','','','','','','','',''],
            ['','','','','','','','','',''],
            ['','','','','','','','','',''],
            ['','','','','','','','','',''],
            ['','','','','','','','','',''],
            ['','','','','','','','','',''],
            ['','','','','','','','','',''],
            ['','','','','','','','','',''],
            ['','','','','','','','','',''],
            ['','','','','','','','','',''],
            ['','','','','','','','','',''],
            ['','','','','','','','','',''],
            ['','','','','','','','','',''],
            ['','','','','','','','','',''],
            ['','','','','','','','','',''],
            ['','','','','','','','','',''],
            ['','','','','','','','','',''],
            ['','','','','','','','','',''],
            ['','','','','','','','','',''],
            ['','','','','','','','','',''],
            ['','','','','','','','','',''],
            ['','','','','','','','','',''],
            ['','','','','','','','','',''],
            ['','','','','','','','','','']
        ];
        this.currentFigure.position.forEach(pos => {
            emptyMatrix[pos.y][pos.x]=this.currentFigure.symbol;
        })

        this.merge(emptyMatrix)
        
    }

    merge = (emptyMatrix) => {
        for (let i = 0; i < 10; i++) {
            for(let j = 0; j < 24; j++){
                if(emptyMatrix[j][i]!==''){
                    this.matrix[j][i] = emptyMatrix[j][i];
                } else {
                    this.matrix[j][i]='';
                }
            }
        }
        this.print();

    }
}

export default Tetris;